{"version":3,"sources":["../../src/pages/painel-controle-adm/painel-controle-adm/formas-pagamento/forma-pagamento-config/tipo-pagamento-edit/tipo-pagamento-edit.module.ts","../../src/providers/database/services/tipo-pagamento.ts","../../src/pages/painel-controle-adm/painel-controle-adm/formas-pagamento/forma-pagamento-config/tipo-pagamento-edit/tipo-pagamento-edit.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TipoPagamentoEditPage } from './tipo-pagamento-edit';\n\n@NgModule({\n  declarations: [\n    TipoPagamentoEditPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TipoPagamentoEditPage),\n  ],\n})\nexport class TipoPagamentoEditPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/painel-controle-adm/painel-controle-adm/formas-pagamento/forma-pagamento-config/tipo-pagamento-edit/tipo-pagamento-edit.module.ts","import { TranslateService } from '@ngx-translate/core';\r\nimport { ModalController, ToastController, AlertController } from 'ionic-angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { FirebaseListObservable, FirebaseObjectObservable, AngularFireDatabase } from \"angularfire2/database\";\r\nimport { TipoPagamento } from \"../models/tipo-pagamento\";\r\n\r\n@Injectable()\r\nexport class TipoPagamentoService {\r\n  public basePath:string;\r\n  public tiposPagamento: FirebaseListObservable<TipoPagamento[]> = null; //  list of objects\r\n  public tipoPagamento: FirebaseObjectObservable<TipoPagamento> = null; //   single object\r\n  public formaPagamentoAtualKey;\r\n  constructor(\r\n    private db: AngularFireDatabase,\r\n  ) {\r\n  }\r\n  getAll(key: string) {\r\n    this.basePath = `/forma_pagamentos/${key}/pag_tipos`;\r\n    this.tiposPagamento = this.db.list(this.basePath);    \r\n  }\r\n\r\n  get(keyFormaPagamento, key:string): Promise<TipoPagamento> {\r\n    return new Promise(resolve => {\r\n      const path = `/forma_pagamentos/${keyFormaPagamento}/pag_tipos/${key}`\r\n      this.formaPagamentoAtualKey = keyFormaPagamento;\r\n      this.db.object(path).take(1).subscribe((tipoPagamento: TipoPagamento) => {\r\n        resolve(tipoPagamento);\r\n      });\r\n    })\r\n  }  \r\n\r\n  exists(field: string, value: string, key?): Promise<boolean> {\r\n    return new Promise(resolve => {\r\n      this.db.list(this.basePath, {\r\n        query: {\r\n          orderByChild: field,\r\n          equalTo: value,\r\n          limitToFirst: 1\r\n        }\r\n      }\r\n      ).take(1).subscribe((res) => {\r\n        if (res.length > 0) {\r\n          if (key) {\r\n            if (res[0].$key == key)\r\n              resolve(false);\r\n            else\r\n              resolve(true);\r\n          }\r\n          else\r\n            resolve(true);\r\n\r\n        } else {\r\n          resolve(false);\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  getOnce(field: string, value: string) {\r\n    return this.db.list(this.basePath, {\r\n      query: {\r\n        orderByChild: field,\r\n        equalTo: value,\r\n        limitToFirst: 1\r\n      }\r\n    }\r\n    ).take(1);\r\n  }\r\n\r\n  create(TipoPagamento: TipoPagamento) {\r\n    return this.tiposPagamento.push(TipoPagamento)\r\n  }\r\n\r\n  update(key: string, value: any) {\r\n    return this.tiposPagamento.update(key, value);\r\n  }\r\n\r\n  delete(key: string) {\r\n    return this.tiposPagamento.remove(key)\r\n  }\r\n\r\n  deleteAll(): void {\r\n    this.tiposPagamento.remove()\r\n      .catch(error => this.handleError(error))\r\n  }\r\n\r\n  private handleError(error) {\r\n    console.log(error)\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/services/tipo-pagamento.ts","\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TipoPagamento } from './../../../../../../providers/database/models/tipo-pagamento';\nimport { TipoPagamentoService } from './../../../../../../providers/database/services/tipo-pagamento';\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ModalController, AlertController, ToastController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-tipo-pagamento-edit',\n  templateUrl: 'tipo-pagamento-edit.html',\n})\nexport class TipoPagamentoEditPage {\n\n  tipoPagamento: TipoPagamento;\n  formulario: FormGroup;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public tipoPagamentoSrvc: TipoPagamentoService,\n    public modalCtrl: ModalController,\n    public alertCtrl: AlertController,\n    private formBuilder: FormBuilder,\n    private translate: TranslateService,\n    private toastCtrl: ToastController,        \n  ) {\n    if (this.navParams.data.tipoPagamento)\n    this.tipoPagamento = this.navParams.data.tipoPagamento;\n  else\n    this.tipoPagamento = <TipoPagamento>{\n      tipopag_mnemonico: null,\n      tipopag_descricao: null\n    }    \n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      tipopag_mnemonico: [null, Validators.required],\n      tipopag_nome: [null, Validators.required],\n      tipopag_descricao: [null, Validators.required],\n    });\n\n    this.formulario.patchValue({\n      tipopag_mnemonico: this.tipoPagamento.tipopag_mnemonico,\n      tipopag_descricao: this.tipoPagamento.tipopag_descricao,\n    });\n  }\n\n  verificaValidTouched(campo: string) {\n    this.formulario.get(campo).errors;\n    return (\n      !this.formulario.get(campo).valid &&\n      (this.formulario.get(campo).touched || this.formulario.get(campo).dirty)\n    );\n  }\n\n  verificaValidtiposPagamentoForm(formGroup: FormGroup) {\n    console.log(formGroup);\n    Object.keys(formGroup.controls).forEach(campo => {\n      const controle = formGroup.get(campo);\n      controle.markAsDirty();\n      if (controle instanceof FormGroup) {\n        this.verificaValidtiposPagamentoForm(controle);\n      }\n    });\n  }\n  save() {\n    if (this.formulario.valid) {\n\n      this.tipoPagamento.tipopag_mnemonico = this.formulario.get('tipopag_mnemonico').value;\n      this.tipoPagamento.tipopag_descricao = this.formulario.get('tipopag_descricao').value;\n      this.tipoPagamentoSrvc.exists('tipopag_mnemonico',this.tipoPagamento.tipopag_mnemonico, this.tipoPagamento.$key).then((exists) => {\n        if (exists){\n          let toast = this.toastCtrl.create({\n            message: 'Já existe um registro criado com esta ação.',\n            duration: 3000,\n            position: 'top'\n          });\n          toast.present()  \n          return;\n        } else {\n          let parsekey: any = this.tipoPagamento;\n          if (parsekey.$key) {\n            this.tipoPagamentoSrvc.update(parsekey.$key, this.tipoPagamento).then(() => {\n              let toast = this.toastCtrl.create({\n                message: 'Registro atualizado com sucesso',\n                duration: 3000,\n                position: 'top',\n                cssClass: 'toast-success'\n              });\n              toast.present().then(() => this.navCtrl.pop());\n            }).catch(()=>{\n              let toast = this.toastCtrl.create({\n                message: 'Ocorreu um erro na alteração do registro.',\n                duration: 3000,\n                position: 'top',\n              });\n              toast.present();              \n            });;\n          } else {\n            this.tipoPagamentoSrvc.create(this.tipoPagamento).then(() => {\n              let toast = this.toastCtrl.create({\n                message: 'Registro criado com sucesso',\n                duration: 3000,\n                position: 'top',\n                cssClass: 'toast-success'\n              });\n              toast.present();\n              this.navCtrl.pop();\n            }).catch(() => {\n              let toast = this.toastCtrl.create({\n                message: 'Ocorreu um erro na criação do registro.',\n                duration: 3000,\n                position: 'top',\n              });\n              toast.present();          \n            })\n          }\n        }\n      })      \n    } else {\n      this.verificaValidtiposPagamentoForm(this.formulario);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/painel-controle-adm/painel-controle-adm/formas-pagamento/forma-pagamento-config/tipo-pagamento-edit/tipo-pagamento-edit.ts"],"sourceRoot":""}