{"version":3,"sources":["../../src/pages/autenticacao/resetpwd/resetpwd.module.ts","../../src/pages/autenticacao/resetpwd/resetpwd.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetpwdPage } from './resetpwd';\nimport { TranslateModule } from \"@ngx-translate/core\";\n\n@NgModule({\n  declarations: [\n    ResetpwdPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetpwdPage),\n    TranslateModule.forChild()    \n  ],\n})\nexport class ResetpwdPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/autenticacao/resetpwd/resetpwd.module.ts","import { TranslateService } from '@ngx-translate/core';\nimport { AuthServiceProvider } from '../../../providers/auth-service';\nimport { Component } from '@angular/core';\nimport { NavController, AlertController, NavParams, LoadingController, ToastController, ModalController, IonicPage } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n/*\n  Generated class for the Resetpwd page.\n\n  See http://ionicframework.com/docs/v2/components/#navigation for more info on\n  Ionic pages and navigation.\n*/\n@IonicPage()\n@Component({\n  selector: 'page-resetpwd',\n  templateUrl: 'resetpwd.html'\n})\nexport class ResetpwdPage {\n\n  public resetpwdForm;\n  emailChanged: boolean = false;\n  submitAttempt: boolean = false;\n  loading: any;\n\n  constructor(public navCtrl: NavController, \n    public modalCtrl: ModalController, \n    public authService: AuthServiceProvider, \n    public navParams: NavParams, \n    public formBuilder: FormBuilder,\n    public alertCtrl: AlertController, \n    public loadingCtrl: LoadingController,\n    public toastCtrl: ToastController,    \n    public translate: TranslateService) {\n    let EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    this.resetpwdForm = formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(EMAIL_REGEXP)])]\n    });\n  }\n  register(){\n    this.navCtrl.pop();\n    this.modalCtrl.create('SignupPage').present();\n  }\n\n  login(){\n    this.navCtrl.pop();\n    this.modalCtrl.create('LoginPage').present();\n  }\n  resetPwd() {\n    if (!this.resetpwdForm.valid){\n      console.log(this.resetpwdForm.value);\n    } else {\n      this.authService.resetPassword(this.resetpwdForm.value.email).then( authService => {\n        \n        this.loading.dismiss().then(() => {\n          this.translate.get([\"AUTH_SUCCESS_RESET_PASSWORD\",  \"OK_BUTTON_TEXT\"]).subscribe(\n            (values) => {\n              let toast = this.toastCtrl.create({\n                message: values.AUTH_SUCCESS_RESET_PASSWORD,\n                duration: 6000,\n                position: 'top',\n                showCloseButton: true,\n                closeButtonText: values.OK_BUTTON_TEXT\n              });\n              toast.present();\n              this.navCtrl.setRoot('LoginPage');\n            });\n        });        \n      }, error => { \n        this.loading.dismiss().then(() => {\n          var messageErrorTranslated: string;\n          this.translate.get([\n            \"AUTH_INVALID_EMAIL\", \"AUTH_USER_DISABLED\", \"AUTH_USER_NOT_FOUND_RESET\", \"AUTH_WRONG_PASSWORD\"\n          ]).subscribe(\n            (values) => {\n              switch (error.code) {\n                case 'auth/invalid-email':\n                  messageErrorTranslated = values.AUTH_INVALID_EMAIL;\n                  break;\n                case 'auth/user-disabled':\n                  messageErrorTranslated = values.AUTH_USER_DISABLED;\n                  break;\n                case 'auth/user-not-found':\n                  messageErrorTranslated = values.AUTH_USER_NOT_FOUND_RESET;\n                  break;\n                case 'auth/wrong-password':\n                  messageErrorTranslated = values.AUTH_WRONG_PASSWORD;\n                  break;\n              }\n              // let alert = this.alertCtrl.create({\n              //   message: messageErrorTranslated,\n              //   buttons: [\n              //     {\n              //       text: \"Ok\",\n              //       role: 'cancel'\n              //     }\n              //   ]\n              // });\n              // alert.present();\n              let toast = this.toastCtrl.create({\n                message: messageErrorTranslated,\n                duration: 3000,\n                position: 'top'\n              });\n              toast.present();\n            });\n\n        });\n      });\n\n      this.loading = this.loadingCtrl.create({\n        dismissOnPageChange: true,\n      });\n      this.loading.present();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/autenticacao/resetpwd/resetpwd.ts"],"sourceRoot":""}